<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>com.transactrules</groupId>
		<artifactId>app</artifactId>
		<version>1.0.0</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.transactrules</groupId>
	<artifactId>api</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>api</name>
	<description>Rule based transaction processing framework</description>

	<properties>
		<main.basedir>${project.parent.basedir}</main.basedir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<start-class>com.transactrules.accounts.AccountsApplication</start-class>
		<docker.image.prefix>transactrules</docker.image.prefix>
	</properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-releasetrain</artifactId>
                <version>Ingalls-SR9</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>com.transactrules</groupId>
			<artifactId>frontend</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>1.5.10.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-dynamodb</artifactId>
			<version>1.11.34</version>
		</dependency>
        <!-- https://mvnrepository.com/artifact/com.github.derjust/spring-data-dynamodb -->
        <dependency>
            <groupId>com.github.derjust</groupId>
            <artifactId>spring-data-dynamodb</artifactId>
            <version>4.5.2</version>
        </dependency>
		<dependency>
			<groupId>com.amazonaws.services.dynamodbv2</groupId>
			<artifactId>amazon-dynamodb-transactions</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.spullara.mustache.java</groupId>
			<artifactId>compiler</artifactId>
			<version>0.9.5</version>
		</dependency>
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>compiler</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.7.0</version>
		</dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.16</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.9.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>transactrules-app</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.3.6</version>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
			<!--
			  Step 1: Downlaod the DynamoDB Local artifact.
				This will download to a Maven cache on disk and is kept until
				the cache is cleared.  The artifact is unpacked to the target
				directory of the build.
			  -->
			<!--<plugin>-->
				<!--<groupId>com.googlecode.maven-download-plugin</groupId>-->
				<!--<artifactId>download-maven-plugin</artifactId>-->
				<!--<version>1.2.1</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>install-dynamodb_local</id>-->
						<!--<phase>initialize</phase>-->
						<!--<goals>-->
							<!--<goal>wget</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<url>http://dynamodb-local.s3-website-${aws.s3.region}.amazonaws.com/dynamodb_local_latest.zip</url>-->
							<!--<unpack>true</unpack>-->
							<!--<outputDirectory>${project.build.directory}/dynamodb</outputDirectory>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!--
      Step 2: Reserve a local port for Dynamo to start on.
        DynamoDB_Local normally runs on port 8000.  Rather than hoping
        that port is open, have this plugin reserve an available port
        and set it as a property in the Maven build.
      -->
			<!--<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<portNames>
								<portName>dynamodblocal.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>-->

			<!--
            Step 3: Start DynamoDB_Local just before integration tests are run.
              This plugin will also cleanup the process during the
              post-integration-test phase.
            -->
			<!--<plugin>
				<groupId>com.bazaarvoice.maven.plugins</groupId>
				<artifactId>process-exec-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<id>dynamodb_local</id>
						<phase>initialize</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<className>dynamodb_local</className>
							<waitAfterLaunch>1</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>-Djava.library.path=dynamodb/DynamoDBLocal_lib</argument>
								<argument>-jar</argument>
								<argument>dynamodb/DynamoDBLocal.jar</argument>


								<argument>-port</argument>
                                <argument>8000</argument>
                                &lt;!&ndash;<argument>${dynamodblocal.port}</argument>&ndash;&gt;

								<argument>-sharedDb</argument>

								<argument>-inMemory</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>-->

			<!--
            Step 4: Use the failsafe plugin to run integration tests.
              https://maven.apache.org/surefire/maven-failsafe-plugin/
            -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<systemPropertyVariables>
						<!--
                        Set a system property for the test clients to use when connecting.
                        Something like Apache's commons-metadata can pick this up
                        transparently.
                        -->
						<amazon.dynamo.endpoint>http://localhost:${dynamodblocal.port}</amazon.dynamo.endpoint>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
